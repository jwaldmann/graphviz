% graphviz - TODO
% Ivan Lazar Miljenovic

Future Plans for graphviz
=========================

This is a list of planned feature improvements to graphviz along with
an indication of when it's likely to be implemented (note that these
time scales are in relation to releases, not actual time).

Short term
----------

* Quickstart-style documentation to help users get going with graphviz
  quickly.

Medium term
-----------

* Improve the test suite such that the generated `DotGraph` and
  `GDotGraph` values are valid (and thus can be passed to Graphviz
  proper).  This will require the state-based printer and parser from
  above to be implemented.

* Add support for non-visualisation Graphviz tools (e.g. dijkstra and
  tred).

Long term
---------

* Allow usage of non-FGL graphs with graphviz.  This will require
  implementing a separate library to represent graphs (see initial
  discussions about this
  [here](http://www.haskell.org/pipermail/haskell-cafe/2009-June/063402.html)).

<!--
     Local Variables:
     mode:markdown
     End:
  -->

